#include <iostream>


using namespace std;

/*
* 开放-封闭原则，是说软件实体（类、模块、函数等等）应该可以扩展，但是不可以修改
* 特征：对于扩展是开放的（open for extension），对于更改是封闭的（closed for modification）
* 无论模块是多么‘封闭’，都会存在一些无法对之封闭的情况。既然不可能完全封闭，设计人员必须对于他设计的模块应该对哪种变化封闭做出选择。他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那些变化
* 开放-封闭原则是面向对象设计的核心所在。遵循这个原则可以带来面向对象的技术所声称的巨大好处，也就是可维护、可扩展、可复用、灵活性好。
* 拒绝不成熟的抽象和抽象本身一样重要
*/






int main()
{


	return 0;
}
