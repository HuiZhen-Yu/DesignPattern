#include <iostream>

using namespace std;

/*
* 依赖倒转原则（dependence inversion principal）
* 1.上层模块不应该依赖底层模块，他们都应该依赖于抽象；2.抽象不应该依赖于细节，细节应该依赖于抽象；
* 说白了就是针对接口编程而不是针对实现编程（类似于电脑，主板上面提供cpu，显卡的接口，而cpu，gpu具体的实现我们不需要知道）强内聚，松耦合
* 具体一点就是接口或者抽象类，只要接口是稳定的，那么任何一个的更改都不用担心其他受到影响，这就使得无论高层模块还是底层模块都可以很容易的复用。
* 
*/






int main()
{


	return 0;
}
